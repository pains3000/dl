# -*- coding: utf-8 -*-
"""Pract 5B Evaluating Feed Forward Deep Network For Multiclass Classification Using Kfold Cross-Validation.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hWUnGjDvV71J9yIKEOU_YwQpN9mn4PWw
"""

!pip install scikeras
import pandas
from keras.models import Sequential
from keras.layers import Dense
from scikeras.wrappers import KerasClassifier # Import from scikeras
from tensorflow.keras.utils import to_categorical # Import to_categorical directly
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import KFold
from sklearn.preprocessing import LabelEncoder
# ... rest of your code ...
#loading dataset
df=pandas.read_csv('flowers.csv',header=None)
print(df)
#splitting dataset into input and output variables
# The first row is treated as data, but it contains headers.
# We should skip the first row when selecting data for X.
X = df.iloc[1:,0:4].astype(float) # Start from the second row (index 1)
y=df.iloc[1:,4] # Start from the second row for y as well
#print(X)
#print(y)
#encoding string output into numeric output
encoder=LabelEncoder()
encoder.fit(y)
encoded_y=encoder.transform(y)
print(encoded_y)
dummy_Y= to_categorical(encoded_y) # Use to_categorical directly
print(dummy_Y)
def baseline_model():
  model=Sequential()
  model.add(Dense(8, input_dim=4, activation='relu'))
  model.add(Dense(3, activation='softmax'))
  model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
  return model
estimator=baseline_model()
estimator.fit(X,dummy_Y,epochs=100,shuffle=True)
action=estimator.predict(X)
for i in range(25):
  print(dummy_Y[i])
  print('^^^^^^^^^^^^^^^^^^^^^^')
for i in range(25):
  print(action[i])